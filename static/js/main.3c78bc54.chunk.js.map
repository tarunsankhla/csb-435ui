{"version":3,"sources":["App.js","index.js"],"names":["emoji","App","useState","clickcount","setclickcount","typed","settyped","meaning","setmeaning","emoji_key","Object","keys","getbgcolor","index","className","style","color","onClick","onChange","event","console","log","target","value","placeholder","emojiinput","undefined","map","itme","clickitememoji","backgroundColor","cursor","rootElement","document","getElementById","ReactDOM","render"],"mappings":"wKASMA,EAAQ,CACZ,eAAM,UACN,eAAM,OACN,eAAM,QACN,eAAM,QACN,eAAM,OAGO,SAASC,IACtB,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAGIC,EAAYC,OAAOC,KAAKX,GAoB5B,SAASY,EAAWC,GAClB,OAAIA,EAAQ,GAAK,EACR,MAEF,OAUT,OACE,sBAAKC,UAAU,MAAf,UAEE,0CAzDY,QA2DV,uBAAMC,MAAO,CAAEC,MA1DX,OA0DJ,cAxDO,cA0DT,yEACA,wBAAQC,QAzCZ,WAEEb,EAAcD,EAAa,IAuCzB,sBACA,yDAA4BA,KAE5B,uBAAOe,SAxCX,SAA2BC,GACzBC,QAAQC,IAAIF,EAAMG,OAAOC,OACzBjB,EAASa,EAAMG,OAAOC,UAuCpB,wCAAWlB,KAEX,uBAAOmB,YAAY,cAAcN,SAtCrC,SAA2BC,GACzBC,QAAQC,IAAIF,EAAMG,OAAOC,OACzB,IAAIE,EAAaN,EAAMG,OAAOC,MAC1BhB,EAAUP,EAAMyB,QACJC,IAAZnB,IACFA,EAAU,kCAEZC,EAAWD,GACXa,QAAQC,IAAId,MA+BV,4CAAeA,KAEf,6BArDa,CAAC,OAAQ,MAAO,SAsDfoB,KAAI,SAAUC,EAAMf,GAC9B,OACE,mBAEEI,QAAS,kBA9BrB,SAAwBJ,GACtBO,QAAQC,IAAIR,GA6BagB,CAAeD,IAC9Bb,MAAO,CAAEe,gBAAiBlB,EAAWC,IAHvC,SAKGe,GAJIA,QAUb,iDACA,6BACGnB,EAAUkB,KAAI,SAAUC,EAAMf,GAC7B,OACE,uBAEEI,QAAS,WAvCnBT,EADcR,EAwCwB4B,KAC5Bb,MAAO,CAAEgB,OAAQ,WAHnB,UAKGH,EALH,IAKU,KAAM,MAJTA,WCxFnB,IAAMI,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACnC,EAAD,MAEF+B,I","file":"static/js/main.3c78bc54.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nvar headingtext = \"Human\";\nvar color = \"red\";\n// var username =prompt(\"your name\")\nvar username = \"Tarun\";\nvar clickcount = 0;\n\nconst emoji = {\n  \"ðŸ˜Š\": \"smiling\",\n  \"ðŸ”¥\": \"fire\",\n  \"ðŸ’œ\": \"heart\",\n  \"ðŸ¤£\": \"laugh\",\n  \"ðŸ˜¢\": \"sad\"\n};\n\nexport default function App() {\n  const [clickcount, setclickcount] = useState(0);\n  const [typed, settyped] = useState(\"\");\n  const [meaning, setmeaning] = useState(\"\");\n  var list_print = [\" one\", \"two\", \"three\"];\n\n  var emoji_key = Object.keys(emoji);\n  function likeclickHAndler() {\n    var newclickcount = clickcount + 1;\n    setclickcount(clickcount + 1);\n  }\n  function inputeventhandler(event) {\n    console.log(event.target.value);\n    settyped(event.target.value);\n  }\n\n  function emojieventhandler(event) {\n    console.log(event.target.value);\n    var emojiinput = event.target.value;\n    var meaning = emoji[emojiinput];\n    if (meaning === undefined) {\n      meaning = \"not declared in our database!!\";\n    }\n    setmeaning(meaning);\n    console.log(meaning);\n  }\n  function getbgcolor(index) {\n    if (index % 2 == 0) {\n      return \"red\";\n    }\n    return \"blue\";\n  }\n  function clickitememoji(index) {\n    console.log(index);\n  }\n\n  function emojiclicker(emoji_ic) {\n    var meaning = emoji[emoji_ic];\n    setmeaning(meaning);\n  }\n  return (\n    <div className=\"App\">\n      {/* <alert /> */}\n      <h1>\n        Welcome {headingtext}\n        <span style={{ color: color }}> {username}</span>\n      </h1>\n      <h2>Start editing to see some magic happen!</h2>\n      <button onClick={likeclickHAndler}>Click me</button>\n      <h2>Number of time clicked {clickcount}</h2>\n\n      <input onChange={inputeventhandler}></input>\n      <h2>Typed {typed}</h2>\n\n      <input placeholder=\"enter emoji\" onChange={emojieventhandler}></input>\n      <h2>Meaning : {meaning}</h2>\n\n      <ul>\n        {list_print.map(function (itme, index) {\n          return (\n            <p\n              key={itme}\n              onClick={() => clickitememoji(itme)}\n              style={{ backgroundColor: getbgcolor(index) }}\n            >\n              {itme}\n            </p>\n          );\n        })}\n      </ul>\n\n      <h3>Emoji we know :</h3>\n      <ul>\n        {emoji_key.map(function (itme, index) {\n          return (\n            <span\n              key={itme}\n              onClick={() => emojiclicker(itme)}\n              style={{ cursor: \"pointer\" }}\n            >\n              {itme} {\"  \"}{\" \"}\n            </span>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\n/**\n * thinks to know\n * class=> classname\n * style  => takes an object not  \"\"\n * browser DOM is what browser understands\n * React DOM is library convert react to DOM\n * USeSTate is a function has parameter tohae initial value\n * returns 2 value one param and second a function which returns a function\n * map can only be used with araay\n *\n */\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}